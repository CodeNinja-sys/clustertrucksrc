Shader "Hidden/Deluxe/Tonemapper" {
Properties {
 _MainTex ("Base (RGB)", 2D) = "white" { }
 _Toe ("Toe", Vector) = (0.3,0.59,0.11,1)
 _Shoulder ("Shoulder", Vector) = (0.3,0.59,0.11,1)
 _K ("K", Float) = 0.2
 _Crossover ("Crossover", Float) = 0.2
 _Tint ("Tint", Color) = (1,1,1,1)
}
SubShader { 
 Pass {
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 7136
Program "vp" {
SubProgram "d3d9 " {
"vs_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   row_major float4x4 glstate_matrix_mvp;
					//
					//
					// Registers:
					//
					//   Name               Reg   Size
					//   ------------------ ----- ----
					//   glstate_matrix_mvp c0       4
					//
					
					    vs_2_0
					    dcl_position v0
					    dcl_texcoord v1
					    dp4 oPos.x, c0, v0
					    dp4 oPos.y, c1, v0
					    dp4 oPos.z, c2, v0
					    dp4 oPos.w, c3, v0
					    mov oT0.xy, v1
					
					// approximately 5 instruction slots used"
}
SubProgram "d3d11 " {
"vs_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
}
SubProgram "d3d11_9x " {
"vs_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform UnityPerDraw {
						mat4x4 glstate_matrix_mvp;
						vec4 unused_0_1[18];
					};
					in  vec4 in_POSITION0;
					in  vec2 in_TEXCOORD0;
					out vec2 vs_TEXCOORD0;
					vec4 u_xlat0;
					void main()
					{
					    u_xlat0 = in_POSITION0.yyyy * glstate_matrix_mvp[1];
					    u_xlat0 = glstate_matrix_mvp[0] * in_POSITION0.xxxx + u_xlat0;
					    u_xlat0 = glstate_matrix_mvp[2] * in_POSITION0.zzzz + u_xlat0;
					    gl_Position = glstate_matrix_mvp[3] * in_POSITION0.wwww + u_xlat0;
					    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;
					    return;
					}"
}
}
Program "fp" {
SubProgram "d3d9 " {
"ps_2_0
					
					//
					// Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
					//
					// Parameters:
					//
					//   float _Crossover;
					//   float _K;
					//   sampler2D _MainTex;
					//   float4 _Shoulder;
					//   float4 _Tint;
					//   float4 _Toe;
					//
					//
					// Registers:
					//
					//   Name         Reg   Size
					//   ------------ ----- ----
					//   _Toe         c0       1
					//   _Shoulder    c1       1
					//   _K           c2       1
					//   _Crossover   c3       1
					//   _Tint        c4       1
					//   _MainTex     s0       1
					//
					
					    ps_2_0
					    def c5, 0, 0, 0, 0
					    dcl_pp t0.xy
					    dcl_2d s0
					    texld r0, t0, s0
					    add r1.w, -r0.x, c3.x
					    mov r2, c0
					    cmp r1.xy, r1.w, r2, c1
					    cmp r3.x, r1.w, r2.z, c1.z
					    cmp r3.y, r1.w, r2.w, c1.w
					    mov r4.w, c5.x
					    cmp r1.z, r1.w, r4.w, c2.x
					    mad r1.xy, r1, r0.x, r3
					    rcp r1.y, r1.y
					    mad r0.x, r1.x, r1.y, r1.z
					    add r1.x, -r0.y, c3.x
					    cmp r1.yz, r1.x, r2.zxyw, c1.zxyw
					    cmp r3.x, r1.x, r2.z, c1.z
					    cmp r3.y, r1.x, r2.w, c1.w
					    cmp r1.x, r1.x, r4.w, c2.x
					    mad r1.yz, r1, r0.y, r3.zxyw
					    rcp r1.z, r1.z
					    mad r0.y, r1.y, r1.z, r1.x
					    add r1.x, -r0.z, c3.x
					    cmp r1.yz, r1.x, r2.zxyw, c1.zxyw
					    cmp r2.x, r1.x, r2.z, c1.z
					    cmp r2.y, r1.x, r2.w, c1.w
					    cmp r1.x, r1.x, r4.w, c2.x
					    mad r1.yz, r1, r0.z, r2.zxyw
					    rcp r1.z, r1.z
					    mad r0.z, r1.y, r1.z, r1.x
					    mul_pp r0, r0, c4
					    mov_pp oC0, r0
					
					// approximately 29 instruction slots used (1 texture, 28 arithmetic)"
}
SubProgram "d3d11 " {
"ps_4_0
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _Toe;
						vec4 _Shoulder;
						float _K;
						float _Crossover;
						vec4 _Tint;
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					bvec3 u_xlatb1;
					vec3 u_xlat2;
					vec3 u_xlat3;
					vec3 u_xlat4;
					vec3 u_xlat5;
					vec2 u_xlat13;
					void main()
					{
					    u_xlat0 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlatb1.xyz = lessThan(vec4(vec4(_Crossover, _Crossover, _Crossover, _Crossover)), u_xlat0.xyzx).xyz;
					    u_xlat2.xy = (u_xlatb1.z) ? _Shoulder.xy : _Toe.xy;
					    u_xlat3.xy = _Shoulder.zw;
					    u_xlat3.z = _K;
					    u_xlat4.xy = _Toe.zw;
					    u_xlat4.z = 0.0;
					    u_xlat5.xyz = (u_xlatb1.z) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat13.xy = u_xlat2.xy * u_xlat0.zz + u_xlat5.xy;
					    u_xlat13.x = u_xlat13.x / u_xlat13.y;
					    u_xlat0.z = u_xlat5.z + u_xlat13.x;
					    u_xlat2.xyz = (u_xlatb1.x) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (u_xlatb1.y) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat1.x = (u_xlatb1.x) ? _Shoulder.x : _Toe.x;
					    u_xlat1.y = (u_xlatb1.x) ? _Shoulder.y : _Toe.y;
					    u_xlat1.z = (u_xlatb1.y) ? _Shoulder.x : _Toe.x;
					    u_xlat1.w = (u_xlatb1.y) ? _Shoulder.y : _Toe.y;
					    u_xlat1.xy = u_xlat1.xy * u_xlat0.xx + u_xlat2.xy;
					    u_xlat1.zw = u_xlat1.zw * u_xlat0.yy + u_xlat3.xy;
					    u_xlat1.xz = u_xlat1.xz / u_xlat1.yw;
					    u_xlat0.y = u_xlat3.z + u_xlat1.z;
					    u_xlat0.x = u_xlat2.z + u_xlat1.x;
					    SV_Target0 = u_xlat0 * _Tint;
					    return;
					}"
}
SubProgram "d3d11_9x " {
"ps_4_0_level_9_1
					
					#version 330
					#extension GL_ARB_explicit_attrib_location : require
					#extension GL_ARB_explicit_uniform_location : require
					
					#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
					#if HLSLCC_ENABLE_UNIFORM_BUFFERS
					#define UNITY_UNIFORM
					#else
					#define UNITY_UNIFORM uniform
					#endif
					#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
					#if UNITY_SUPPORTS_UNIFORM_LOCATION
					#define UNITY_LOCATION(x) layout(location = x)
					#define UNITY_BINDING(x) layout(binding = x, std140)
					#else
					#define UNITY_LOCATION(x)
					#define UNITY_BINDING(x) layout(std140)
					#endif
					layout(std140) uniform PGlobals {
						vec4 unused_0_0[6];
						vec4 _Toe;
						vec4 _Shoulder;
						float _K;
						float _Crossover;
						vec4 _Tint;
					};
					uniform  sampler2D _MainTex;
					in  vec2 vs_TEXCOORD0;
					layout(location = 0) out vec4 SV_Target0;
					vec4 u_xlat0;
					vec4 u_xlat1;
					bvec3 u_xlatb1;
					vec3 u_xlat2;
					vec3 u_xlat3;
					vec3 u_xlat4;
					vec3 u_xlat5;
					vec2 u_xlat13;
					void main()
					{
					    u_xlat0 = texture(_MainTex, vs_TEXCOORD0.xy);
					    u_xlatb1.xyz = lessThan(vec4(vec4(_Crossover, _Crossover, _Crossover, _Crossover)), u_xlat0.xyzx).xyz;
					    u_xlat2.xy = (u_xlatb1.z) ? _Shoulder.xy : _Toe.xy;
					    u_xlat3.xy = _Shoulder.zw;
					    u_xlat3.z = _K;
					    u_xlat4.xy = _Toe.zw;
					    u_xlat4.z = 0.0;
					    u_xlat5.xyz = (u_xlatb1.z) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat13.xy = u_xlat2.xy * u_xlat0.zz + u_xlat5.xy;
					    u_xlat13.x = u_xlat13.x / u_xlat13.y;
					    u_xlat0.z = u_xlat5.z + u_xlat13.x;
					    u_xlat2.xyz = (u_xlatb1.x) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat3.xyz = (u_xlatb1.y) ? u_xlat3.xyz : u_xlat4.xyz;
					    u_xlat1.x = (u_xlatb1.x) ? _Shoulder.x : _Toe.x;
					    u_xlat1.y = (u_xlatb1.x) ? _Shoulder.y : _Toe.y;
					    u_xlat1.z = (u_xlatb1.y) ? _Shoulder.x : _Toe.x;
					    u_xlat1.w = (u_xlatb1.y) ? _Shoulder.y : _Toe.y;
					    u_xlat1.xy = u_xlat1.xy * u_xlat0.xx + u_xlat2.xy;
					    u_xlat1.zw = u_xlat1.zw * u_xlat0.yy + u_xlat3.xy;
					    u_xlat1.xz = u_xlat1.xz / u_xlat1.yw;
					    u_xlat0.y = u_xlat3.z + u_xlat1.z;
					    u_xlat0.x = u_xlat2.z + u_xlat1.x;
					    SV_Target0 = u_xlat0 * _Tint;
					    return;
					}"
}
}
 }
}
Fallback Off
}